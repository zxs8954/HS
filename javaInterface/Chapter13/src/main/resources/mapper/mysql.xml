<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course">
    <!--登录接口sql-->
    <select id="login" parameterType="com.course.model.User" resultType="Integer">
        select count(*) from user
        where userName=#{userName}
        and password=#{password}
    </select>

    <!--<select id="login" parameterType="com.course.model.User" resultType="Integer">-->
        <!--select * from user-->
        <!--where userName=#{userName}-->
    <!--</select>-->


    <!--添加用户接口sql-->
    <insert id="addUser" parameterType="com.course.model.User">
        insert  into
        user(userName,password,sex,age,permission,isDelete)
        values
        (#{userName},#{password},#{sex},#{age},#{permission},#{isDelete})
    </insert>

    <!--获取用户sql-->
    <select id="getUserInfo" parameterType="com.course.model.User" resultType="com.course.model.User">
        select * from user
        <trim prefix="where" prefixOverrides="and">
            <if test="null!=id and ''!=id">
                AND id=#{id}
            </if>
            <if test="null!=userName and ''!=userName">
                AND userName=#{userName}
            </if>
            <if test="null!=password and ''!=password">
                AND password=#{password}
            </if>
            <if test="null!=sex and ''!=sex">
                AND sex=#{sex}
            </if>
            <if test="null!=age and ''!=age">
                AND age=#{age}
            </if>
            <if test="null!=permission and ''!=permission">
                AND permission=#{permission}
            </if>
            <if test="null!=isDelete and ''!=isDelete">
                AND isDelete=#{isDelete}
            </if>
        </trim>
        <!--上面部分标签说明：获取用户sql本来应该是select * from user where id=#{id}and userName=#{userName}.....
          当使用<if test="null!=id and ''!=id">AND id=#{id}</if>后，会自动处理传过来的id为null或''的情况，
          不这样处理的话，执行sql时会报错；
          prefixOverrides="and" 是处理“AND id=#{id}”中的AND，因为在where后不能接and，这样是就实现了在sql语句中不该
          使用and的地方不使用and。
          -->
    </select>

    <!--更新、删除用户信息-->
    <update id="updateUserInfo" parameterType="com.course.model.User">
        update user
        <trim prefix="SET" suffixOverrides=",">
            <if test="null != userName and '' != userName">
                userName=#{userName},
            </if>
            <if test="null != sex and '' != sex">
                sex=#{sex},
            </if>
            <if test="null != age and '' != age">
                age=#{age},
            </if>
            <if test="null != permission and '' != permission">
                permission=#{permission},
            </if>
            <if test="null != isDelete and '' != isDelete">
                isDelete=#{isDelete},
            </if>
        </trim>

    </update>
</mapper>